version: '3.8'

services:
  dgdm-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - DGDM__SERVER__BIND_ADDRESS=0.0.0.0:8080
      - DGDM__GRAPH__MAX_NODES=1000000
      - DGDM__GRAPH__MAX_EDGES=10000000
      - DGDM__PROCESSING__TEMPERATURE=0.1
      - DGDM__LOGGING__LEVEL=info
      - DGDM__LOGGING__ENABLE_JSON=true
    volumes:
      - ./models:/app/models:ro
      - ./config.prod.toml:/app/config.toml:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - dgdm-network
    security_opt:
      - no-new-privileges:true
    user: "1001:1001"

  dgdm-proxy:
    image: nginx:1.24-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - dgdm-server
    restart: unless-stopped
    networks:
      - dgdm-network
    security_opt:
      - no-new-privileges:true

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    networks:
      - dgdm-network
    security_opt:
      - no-new-privileges:true

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123!
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - dgdm-network
    security_opt:
      - no-new-privileges:true

  jaeger:
    image: jaegertracing/all-in-one:1.45
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped
    networks:
      - dgdm-network
    security_opt:
      - no-new-privileges:true

networks:
  dgdm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local